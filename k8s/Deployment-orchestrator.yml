apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    nirmata.io/deployment.name: orchestrator
    nirmata.io/service.name: orchestrator
    nirmata.io/type: app
  name: orchestrator
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      nirmata.io/service.name: orchestrator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        nirmata.io/deployment.name: orchestrator
        nirmata.io/service.name: orchestrator
        nirmata.io/type: app
        nirmata.io/force.rolling.update: "2"
    spec:
      serviceAccountName: "orchestrator-service"
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: nirmata.io/deployment.name
                    operator: In
                    values:
                      - orchestrator
              topologyKey: kubernetes.io/hostname
      imagePullSecrets:
      - name: registry-v2.nirmata.io
      - name: ghcr.io
      containers:
        - env:
            - name: "JAVA_TOOL_OPTIONS"
              value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9999 \
              -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.authenticate=false \
              -Dcom.sun.management.jmxremote.ssl=false"
            - name: JAVA_OPTS
              value: '-XshowSettings:vm -XX:MaxRAMPercentage=70.0'
            - name: nirmata.environment.name
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: eureka.registration.enabled
              value: 'false'
            - name: nirmata.service.dnsclient
              value: 'true'
            - name: "nirmata.locks.mongo.enabled"
              value: "true"
            - name: "service.mongodb.seedSet"
              value: "mongodb:27017"
            - name: nirmata.zookeeper.address
              value: 'zookeeper:2181'
            - name: nirmata.kafka.address
              value: 'kafka:9092'
            - name: "service.logs.level"
              value: "warn"
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  key: HTTP_PROXY
                  name: nirmata-config
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  key: HTTPS_PROXY
                  name: nirmata-config
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  key: NO_PROXY
                  name: nirmata-config
            - name: http_proxy
              valueFrom:
                configMapKeyRef:
                  key: http_proxy
                  name: nirmata-config
            - name: https_proxy
              valueFrom:
                configMapKeyRef:
                  key: https_proxy
                  name: nirmata-config
            - name: no_proxy
              valueFrom:
                configMapKeyRef:
                  key: no_proxy
                  name: nirmata-config
          image: "ghcr.io/nirmata/orchestrator:4.13.0-23.gfe5d2b8"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /orchestrator/status
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: orchestrator
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /orchestrator/status
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1500Mi
            requests:
              memory: 1500Mi
              cpu: 500m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      priorityClassName: nirmata-app-lower
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: nirmata.io/dedicated-worker-group
          operator: Equal
          value: worker-group-1
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 20
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 20
