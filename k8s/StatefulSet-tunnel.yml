apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  labels:
    nirmata.io/service.name: tunnel
    nirmata.io/statefulset.name: tunnel
    nirmata.io/type: app
  name: tunnel
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      nirmata.io/service.name: tunnel
  serviceName: tunnel
  template:
    metadata:
      labels:
        nirmata.io/service.name: tunnel
        nirmata.io/statefulset.name: tunnel
        nirmata.io/type: app
    spec:
      serviceAccountName: "tunnel-service"
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: nirmata.io/statefulset.name
                operator: In
                values:
                - tunnel
            topologyKey: kubernetes.io/hostname
      imagePullSecrets:
      - name: registry-v2.nirmata.io
      - name: ghcr.io
      containers:
      - args:
        - -api
        - tcp://$(NIRMATA_HOST_ADDRESS):9090
        - -tcp
        - $(NIRMATA_HOST_ADDRESS)
        - -wss
        - tcp://$(NIRMATA_HOST_ADDRESS):8443
        - -path
        - /tunnels
        env:
        - name: NIRMATA_HOST_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: NIRMATA_ENVIRONMENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: HTTP_PROXY
              name: nirmata-config
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: HTTPS_PROXY
              name: nirmata-config
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: NO_PROXY
              name: nirmata-config
        - name: http_proxy
          valueFrom:
            configMapKeyRef:
              key: http_proxy
              name: nirmata-config
        - name: https_proxy
          valueFrom:
            configMapKeyRef:
              key: https_proxy
              name: nirmata-config
        - name: no_proxy
          valueFrom:
            configMapKeyRef:
              key: no_proxy
              name: nirmata-config
        image: "ghcr.io/nirmata/nirmata-tunnel-server:4.20.0-rc2"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/tunnels
            port: 9090
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: tunnel
        ports:
        - containerPort: 8443
          name: wss
          protocol: TCP
        - containerPort: 9090
          name: api
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      priorityClassName: nirmata-app-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 20
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 20
  updateStrategy:
    type: RollingUpdate

